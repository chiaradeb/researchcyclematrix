aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1))+theme(legend.position = "top")+labs(x="date",y="file id")
ggplot(rcm)+
geom_point(data = rcm_dateslong,
aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1))+theme(legend.position = "top")+labs(x="date",y="file id")+geom_vline(xintercept = Sys.Date())
ggplot(rcm)+
geom_point(data = rcm_dateslong,
aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1))+theme(legend.position = "top")+labs(x="date",y="file id")+
geom_vline(xintercept = Sys.Date(),col="black",lwd=10)
ggplot(rcm)+
geom_point(data = rcm_dateslong,
aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1),axis.text.x= element_text(size = 1,angle = 90,vjust = 0))+theme(legend.position = "top")+labs(x="date",y="file id")+
geom_vline(xintercept = Sys.Date(),col="black",lwd=10)
ggplot(rcm)+
geom_point(data = rcm_dateslong,
aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1),axis.text.x= element_text(size = 1,angle = 90,vjust = 0))+theme(legend.position = "top")+labs(x="date",y="file id")+
geom_vline(xintercept = Sys.Date(),col="black",lwd=10)+scale_x_date()
sapply(rcm_dateslong,class)
sapply(rcm_dateslong,class) %>% t
sapply(rcm_dateslong,class) %>% as_tibble %>% t
sapply(rcm_dateslong,class) %>% as_tibble
sapply(rcm_dateslong,class) %>% kable
rcm_dateslong$date %>% table
?lubridate
rcm_dateslong$date <-lubridate::as_date("12")
rcm_dateslong$date <-lubridate::as_date("12353")
rcm_dateslong$date <-lubridate::as_date(12353)
rcm_dateslong$date
rcm %>% gather("datetype","date",
date.hqsubmission.actual,
date.endcollection.planned,
date.endcollection.actual,
date.hqsubmission.planned.first,
date.hqsubmission.planned.latest,
date.validated) -> rcm_dateslong
rcm_dateslong$datetype<-factor(rcm_dateslong$datetype,levels = c("date.endcollection.planned"   ,
"date.endcollection.actual",
"date.hqsubmission.planned.first",
"date.hqsubmission.planned.latest",
"date.hqsubmission.actual",
"date.validated",ordered=T)
)
rcm_dateslong$date.minormax[is.na(rcm_dateslong$date.minormax)] <- (min(rcm_dateslong$date.min,na.rm=T))-1
rcm_dateslong$date <-lubridate::as_date(rcm_dateslong$date)
rcm_dateslong$date
rcm_dateslong$date.minormax[is.na(rcm_dateslong$date.minormax)] <- (min(rcm_dateslong$date.min,na.rm=T))-1
rcm %>% gather("datetype","date",
date.hqsubmission.actual,
date.endcollection.planned,
date.endcollection.actual,
date.hqsubmission.planned.first,
date.hqsubmission.planned.latest,
date.validated) -> rcm_dateslong
rcm_dateslong$datetype<-factor(rcm_dateslong$datetype,levels = c("date.endcollection.planned"   ,
"date.endcollection.actual",
"date.hqsubmission.planned.first",
"date.hqsubmission.planned.latest",
"date.hqsubmission.actual",
"date.validated",ordered=T)
)
rcm_dateslong$date %>% table
lubridate::as_date(rcm_dateslong$date)
(rcm_dateslong$date %>% sapply(lubridate::as_date))
(rcm_dateslong$date %>% sapply(lubridate::as_date)) %>% hist
rcm %>% gather("datetype","date",
date.hqsubmission.actual,
date.endcollection.planned,
date.endcollection.actual,
date.hqsubmission.planned.first,
date.hqsubmission.planned.latest,
date.validated) -> rcm_dateslong
rcm_dateslong$datetype<-factor(rcm_dateslong$datetype,levels = c("date.endcollection.planned"   ,
"date.endcollection.actual",
"date.hqsubmission.planned.first",
"date.hqsubmission.planned.latest",
"date.hqsubmission.actual",
"date.validated",ordered=T)
)
rcm_dateslong$date.minormax[is.na(rcm_dateslong$date.minormax)] <- (min(rcm_dateslong$date.min,na.rm=T))-1
rcm_dateslong$date <- sapply(rcm_dateslong$date,lubridate::as_date)
ggplot(rcm)+
geom_point(data = rcm_dateslong,
aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1),axis.text.x= element_text(size = 1,angle = 90,vjust = 0))+theme(legend.position = "top")+labs(x="date",y="file id")+
geom_vline(xintercept = Sys.Date(),col="black",lwd=10)+scale_x_date()
rcm_dateslong$date <- sapply(rcm_dateslong$date,lubridate::as_date)
rcm_dateslong %>% sapply(class)
rcm_dateslong %>% sapply(class) %>% kable
rcm_dateslong$date <- sapply(rcm_dateslong$date,lubridate::as_date)
rcm_dateslong %>% sapply(class) %>% kable
rcm_dateslong$date<-lubridate::as_date(rcm_dateslong$date)
rcm_dateslong %>% sapply(class) %>% kable
# rcm_dateslong %>% sapply(class) %>% kable
ggplot(rcm)+
geom_point(data = rcm_dateslong,
aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1),axis.text.x= element_text(size = 1,angle = 90,vjust = 0))+theme(legend.position = "top")+labs(x="date",y="file id")+
geom_vline(xintercept = Sys.Date(),col="black",lwd=10)+scale_x_date()
# rcm_dateslong %>% sapply(class) %>% kable
ggplot(rcm)+
geom_point(data = rcm_dateslong,
aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1),axis.text.x= element_text(size = 1,angle = 90,vjust = 0))+theme(legend.position = "top")+labs(x="date",y="file id")+
geom_vline(xintercept = Sys.Date(),col="black",lwd=1)+scale_x_date()
#' Gant chart of all RCM items
#' @param rcm the research cycle matrix from rcm_download(raw=F)
#' @return ggplot item
#' @export
rcm_gant<-function(rcm){
rcm$status[!grepl("HQ|validated|field|partner",rcm$status)]<-"other"
rcm$status<-as.factor(rcm$status)
rcm$date.min<-NULL
rcm$date.max<-NULL
rcm$date.min<-apply(rcm[,grep("^date\\.",names(rcm))],1,function(x){format.Date(min(as.Date(x,format="%Y-%m-%d"),na.rm = T),format="%Y-%m-%d")})
rcm$date.min <-as.Date(rcm$date.min,format="%Y-%m-%d")
rcm$date.max<-apply(rcm[,grep("^date\\.",names(rcm))],1,function(x){format.Date(max(as.Date(x,format="%Y-%m-%d"),na.rm = T),format="%Y-%m-%d")})
rcm$date.max <-as.Date(rcm$date.max,format="%Y-%m-%d")
rcm$date.minormax<-ifelse(is.na(rcm$date.min),rcm$date.max,rcm$date.min) %>% (lubridate::as_date)
rcm$date_style_status<-NA
rcm$date_style_status[rcm$status=="validated"]<-"date.validated"
rcm$date_style_status[rcm$status=="1 not received "]<-"date.hqsubmission.planned.latest"
rcm$date_style_status[rcm$status=="2 with HQ"]<-"date.hqsubmission.actual"
rcm$date_style_status[rcm$status=="with field"]<-"date.hqsubmission.actual"
rcm$date_style_status[rcm$status=="validated"]<-"date.validated"
rcm$date_style_status[rcm$status=="other"]<-"date.endcollection.planned"
hasnodate<-rcm %>% apply(1,function(x){all(is.na(x[c("date.hqsubmission.actual",
"date.endcollection.planned",
"date.endcollection.actual",
"date.hqsubmission.planned.first",
"date.hqsubmission.planned.latest",
"date.validated")]))})
rcm %>% gather("datetype","date",
date.hqsubmission.actual,
date.endcollection.planned,
date.endcollection.actual,
date.hqsubmission.planned.first,
date.hqsubmission.planned.latest,
date.validated) -> rcm_dateslong
rcm_dateslong$datetype<-factor(rcm_dateslong$datetype,levels = c("date.endcollection.planned"   ,
"date.endcollection.actual",
"date.hqsubmission.planned.first",
"date.hqsubmission.planned.latest",
"date.hqsubmission.actual",
"date.validated",ordered=T)
)
rcm_dateslong$date.minormax[is.na(rcm_dateslong$date.minormax)] <- (min(rcm_dateslong$date.min,na.rm=T))-1
rcm_dateslong$date <- sapply(rcm_dateslong$date,lubridate::as_date)
rcm_dateslong$date<-lubridate::as_date(rcm_dateslong$date)
# rcm_dateslong %>% sapply(class) %>% kable
ggplot(rcm)+
geom_point(data = rcm_dateslong,
aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
# geom_segment(data=rcm,mapping = aes(y=reorder(file.id,as.numeric(date.minormax),),yend=file.id,
#                                     x=rcm$date.min,xend=date.max,
#                                     colour=date_style_status),
#              lwd=0.5)+
geom_point(data = rcm_dateslong, aes(x=date, y=reorder(file.id,as.numeric(date.minormax)),colour=datetype))+
scale_colour_manual(name="",values=c("date.endcollection.planned"="#ACACAD"   ,
"date.endcollection.actual"="#58585A",
"date.hqsubmission.planned.first"= "#FACDCD",
"date.hqsubmission.planned.latest"="#F7ACAC" ,
"date.hqsubmission.actual"="#CDCDCD",
"date.validated"="#EE5859"),labels=c("planned collection end",
"actual collection end",
"planned HQ submission (first)",
"planned HQ submission (latest)",
"actual HQ submission",
"validation")
)+scale_y_discrete(labels=function(x){strtrim(x,60)})+
# theme(panel.background = element_blank(),
#      panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
#      # panel.grid.major = element_blank(),
#      panel.grid.minor=element_blank(),
#      axis.text.y= element_text(size = 9))+theme(legend.position = "top")+labs(x="date",y="file id")
theme(panel.background = element_blank(),
panel.grid.major = element_line(colour="#CCCCCC", size=0.05),
# panel.grid.major = element_blank(),
panel.grid.minor=element_blank(),
axis.text.y= element_text(size = 1),axis.text.x= element_text(size = 1,angle = 90,vjust = 0))+theme(legend.position = "top")+labs(x="date",y="file id")+
geom_vline(xintercept = Sys.Date(),col="black",lwd=1)+scale_x_date()
}
rcm<-rcm_download(include_archived = T,include_validated = T)
rcm_gant(rcm = rcm)
library(researchcyclematrix)
researchcyclematrix:::todo_create
devtools::install()
library(researchcyclematrix)
researchcyclematrix:::g_sheets_put('asdf','asdf','asdf','asdf')
devtools::install()
researchcyclematrix:::g_sheets_put('asdf','asdf','asdf','asdf')
hypegrammaR::from_analysisplan_map_to_output
hypegrammaR::from_analysisplan_map_to_output
# https://sheets.googleapis.com/v4/spreadsheets/spreadsheetId/values/Sheet1!A1:E1:append?valueInputOption=USER_ENTERED
httr::POST(thisurl,googlesheets:::google_token(),valueInputOption="RAW",
body=
# paste0('{
#                         "values":[["',value,'"]]
# }') %>% cat
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}')
values=c("A","B","C")
)%>% print
values=c("A","B","C")
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}')
# https://sheets.googleapis.com/v4/spreadsheets/spreadsheetId/values/Sheet1!A1:E1:append?valueInputOption=USER_ENTERED
httr::POST(thisurl,googlesheets:::google_token(),valueInputOption="RAW",
body=
# paste0('{
#                         "values":[["',value,'"]]
# }') %>% cat
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}')
value=c("A","B","C")
)%>% print
value=c("A","B","C")
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}')
RJSONIO::toJSON(value)
as.matrix(value)
t(as.matrix(value))
RJSONIO::toJSON(t(as.matrix(value)))
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}')
# https://sheets.googleapis.com/v4/spreadsheets/spreadsheetId/values/Sheet1!A1:E1:append?valueInputOption=USER_ENTERED
httr::POST(thisurl,googlesheets:::google_token(),valueInputOption="RAW",
body=
# paste0('{
#                         "values":[["',value,'"]]
# }') %>% cat
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}') %>% cat
RJSONIO::toJSON(t(as.matrix(value)))
)%>% print
RJSONIO::toJSON(t(list(as.matrix(value))))
# https://sheets.googleapis.com/v4/spreadsheets/spreadsheetId/values/Sheet1!A1:E1:append?valueInputOption=USER_ENTERED
httr::POST(thisurl,googlesheets:::google_token(),valueInputOption="RAW",
body=
# paste0('{
#                         "values":[["',value,'"]]
# }') %>% cat
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}') %>% cat
RJSONIO::toJSON(t(list(a=as.matrix(value))))
)%>% print
RJSONIO::toJSON(t(list(a=as.matrix(value))))
RJSONIO::toJSON(list(t(a=as.matrix(value))))
RJSONIO::toJSON(list(a=t(as.matrix(value))))
RJSONIO::toJSON(list(curlybrackets=t(as.matrix(value))))
RJSONIO::toJSON(t(as.matrix(value)))
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}')
RJSONIO::toJSON(list(values=t(as.matrix(value))))
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}')
paste0('{
"values":[[',paste0(paste0('"',value,'"'),collapse=","),']]
}') %>% cat
usethis::use_package("RJSONIO")
t
t
devtools::install()
library(researchcyclematrix)
RJSONIO::toJSON("[")
library(jsonlite)
jsonlite::toJSON("[")
jsonlite::toJSON("[\n")
RJSONIO::toJSON("[\n")
load_all()
library(devtools)
load_all()
g_sheets_append_row(c("a","b","c"))
g_sheets_append_row(c("a\n","b","c"))
g_sheets_append_row(c("a\n[","b","c"))
g_sheets_append_row(c("a\n[","b","c",'asdf"'))
g_sheets_append_row(c("a\n[","b","c",'asdf""'))
g_sheets_append_row(c("a\n[","b","c",'asdf"" [ ] asdf "" "'))
devtools::install()
install()
# package names
from_cran<-c("assertthat","crayon", "data.table", "dplyr", "ggplot2", "ggthemes",
"htmltools", "knitr", "magrittr", "purrr", "questionr", "reshape",
"reshape2", "rmarkdown", "stringi", "stringr", "survey", "testthat",
"tibble", "tidyr", "utils")
paste0("install.packages(",from_cran,")\n") %>% cat
library(devtools)
install()
document()
library(devtools)
document()
install()
