ggsave
invisible()
invisible() %>% str
print(1) %>% str
1 %>% sum(2) %>% print %>% sum(3) %>% print
#' @param ... other arguments passed to ggplot2::ggsave()
#'
ggsave_visimpact<-function(visualisation,filename, ...){
if(!("ggsave_parameters" %in% names(attributes(visualisation)))){
stop("can only save ggplot objects produced with visualisationIMPACT")
}
params_passed<-list(...)
ggsave_parameters<-attributes(visualisation)$ggsave_parameters
ggsave_parameters<- c(ggsave_parameters, plot = list(visualisation), filename = filename)
do.call(ggsave, ggsave_parameters)
return(invisible(visualisation))
}
114 + 44 + 6.2
source('C:/Users/Martin Barner/work/rpackages/researchcyclematrix/R/rcm_plots.R')
source('C:/Users/Martin Barner/work/rpackages/researchcyclematrix/R/rcm_plots.R')
devtools::install(dependencies = F)
devtools::document()
devtools::install(dependencies = F)
source('C:/Users/Martin Barner/work/rpackages/researchcyclematrix/R/rcm_plots.R')
devtools::document()
devtools::install(dependencies = F)
devtools::install()
researchcyclematrix::rcm_dashboard()
todorow<-tibble::as_tibble(rcm_find_row_by_file.id(rcm,file.id))
devtools::install(dependencies = F)
researchcyclematrix::rcm_dashboard()
traceback()
devtools::install(dependencies = F)
researchcyclematrix::rcm_dashboard()
library(researchcyclematrix)
x<-rcm_download()
devtools::install(dependencies = F)
knitr::opts_chunk$set(echo = FALSE)
library(purrr)
library(knitr)
library(ggplot2)
library(tibble)
library(dplyr)
as_countrylist<-function(x){
x$country<-substr(x$rcid,1,3)
x_countrylist<-x %>% split.data.frame(x$country)
}
rcm$has_comment<-!(rcm$comment %in% c("", " ", NA))
rcm_dashboard()
rcm_dashboard(rcm = rcm,,F)
rcm<-rcm_download()
subs<-subs_download()
rcm_dashboard(rcm,,F)
x<-rcm
knitr::opts_chunk$set(echo = FALSE)
library(purrr)
library(knitr)
library(ggplot2)
library(tibble)
library(dplyr)
as_countrylist<-function(x){
x$country<-substr(x$rcid,1,3)
x_countrylist<-x %>% split.data.frame(x$country)
}
rcm$has_comment<-!(rcm$comment %in% c("", " ", NA))
rcm$days_since_validation[grepl("validated",rcm$status)]<-
(Sys.Date()-lubridate::dmy(rcm$date.validated))[grepl("validated",rcm$status)]
rcm_cl<-as_countrylist(rcm)
delayed$days_delayed<-Sys.Date()-delayed$date.hqsubmission.planned.latest
rcm_dashboard
subs
delayed<todo_delayed()
delayed<-todo_delayed(rcm)
delayed
knitr::opts_chunk$set(echo = FALSE)
library(purrr)
library(knitr)
library(ggplot2)
library(tibble)
library(dplyr)
as_countrylist<-function(x){
x$country<-substr(x$rcid,1,3)
x_countrylist<-x %>% split.data.frame(x$country)
}
rcm$has_comment<-!(rcm$comment %in% c("", " ", NA))
rcm$days_since_validation[grepl("validated",rcm$status)]<-
(Sys.Date()-lubridate::dmy(rcm$date.validated))[grepl("validated",rcm$status)]
rcm_cl<-as_countrylist(rcm)
delayed$days_delayed<-Sys.Date()-delayed$date.hqsubmission.planned.latest
delayed$country<-substr(delayed$rcid,1,3)
delayed_cl<-as_countrylist(delayed)
recently_validated<-rcm %>% filter(rcm$days_since_validation<=14)
recently_validated<-rcm %>% filter(rcm$days_since_validation<=14)
recently_validated<-rcm %>% filter(rcm$days_since_validation<=14)
rcm
rcm
rcm %>% nrow
rcm$days_since_validation
rcm_dashboard(rcm,subs,F)
if(is.null(rcm)){rcm<-rcm_download(include_validated=T)}
if(is.null(subs)){subs<-subs_download()}
if(update_rcm){
message(crayon::black("updating matrix with any new submissions.."))
rcm_update_from_subs(subs,rcm)
}
rcm<-rcm[rcm$unit=="data",]
todo<-todo_create(rcm,subs)
subs$file.id[subs$file.id %in% rcm$file.id,"file.id"]
subs$file.id[subs$file.id %in% rcm$file.id]
subs$file.id[!(subs$file.id %in% rcm$file.id)]
rcm<-rcm_download(include_archived = T,include_validated = T,gdrive_links = F)
subs$file.id[!(subs$file.id %in% rcm$file.id)]
subs$file.id[!(subs$file.id %in% rcm$file.id)] %>% lapply(cat)
subs$file.id[!(subs$file.id %in% rcm$file.id)] %>% cat
knitr::opts_chunk$set(echo = FALSE)
library(purrr)
library(knitr)
library(ggplot2)
library(tibble)
library(dplyr)
as_countrylist<-function(x){
x$country<-substr(x$rcid,1,3)
x_countrylist<-x %>% split.data.frame(x$country)
}
rcm$has_comment<-!(rcm$comment %in% c("", " ", NA))
rcm$days_since_validation[grepl("validated",rcm$status)]<-
(Sys.Date()-lubridate::dmy(rcm$date.validated))[grepl("validated",rcm$status)]
rcm_cl<-as_countrylist(rcm)
delayed$days_delayed<-Sys.Date()-delayed$date.hqsubmission.planned.latest
delayed$country<-substr(delayed$rcid,1,3)
delayed_cl<-as_countrylist(delayed)
recently_validated<-rcm %>% filter(rcm$days_since_validation<=14)
recently_validated_cl<-as_countrylist(recently_validated)
inconsistencies_cl<-as_countrylist(inconsistencies)
delayed<-todo_delayed(rcm)
inconsistent<-rcm_check(rcm)
inconsistent<-inconsistent %>% filter(
!(issue %in% c("planned submission passed but no received date", "data unit item with non-standardisable status"))
)
country_status_markdown(rcm = rcm,delayed = delayed,inconsistencies = inconsistent)
researchcyclematrix:::country_status_markdown(rcm = rcm,delayed = delayed,inconsistencies = inconsistent)
rcm<-rcm[!rcm$archived,]
rcm_dashboard(rcm,subs,F)
library(lubridate)
ymd("2019-04-17") - Sys.Date()
rcm$archived %>% table
rcm<-rcm_download(include_archived = T,include_validated = T,gdrive_links = FALSE)
filter(subs,file.id %in% rcm$file.id)
`%!vin%`<-function(x,y){x[!(x%in%y)]}
subs$file.id %!vin% rcm$file.id
subs$file.id %!vin% rcm$file.id %>% paste(collapse = "\n") %>% cat
library(researchcyclematrix)
browseVignettes("researchcyclematrix")
devtools::install(build_vignettes = T,dependencies = FALSE)
library(researchcyclematrix)
rcm_prefill_research_tracker("../../validation/monthly_tracker.xlsx")
# get first three letters country code from research cycle ID
rcm$country<-substr(rcm$rcid, 1, 3)
# get first three letters country code from research cycle ID
rcm<-rcm_download()
# get first three letters country code from research cycle ID
rcm<-rcm_download()
rcm$country<-substr(rcm$rcid, 1, 3)
rcm$country<-substr(rcm$rcid, 1, 3)
rcm_by_country<- split.data.frame(rcm,rcm$country)
names(rcm_by_country)
output_xlsx_file_name <- paste0("tracker_",names(rcm_by_country),"_", Sys.Date(),".xlsx")
rcm$country<-substr(rcm$rcid, 1, 3)
rcm_by_country<- split.data.frame(rcm,rcm$country)
output_xlsx_file_name <- paste0("tracker_",names(rcm_by_country),"_", Sys.Date(),".xlsx")
# use the "purrr" package to do something many times:
library(purrr)
# run the function on each country / each part of the rcm and create
purrr::map2(output_xlsx_file_name,
rcm_by_country,
rcm_prefill_research_tracker)
# run the function on each country / each part of the rcm and create
purrr::map2(output_xlsx_file_name,
rcm_by_country,
possibly(rcm_prefill_research_tracker))
# run the function on each country / each part of the rcm and create
purrr::map2(output_xlsx_file_name,
rcm_by_country,
possibly(rcm_prefill_research_tracker,otherwise = NA))
getwd()
browseURL("tracker_MLI_2019-08-09.xlsx")
browseURL("tracker_MLI_2019-08-09.xlsx")
# run the function on each country / each part of the rcm and create
purrr::map2(output_xlsx_file_name,
rcm_by_country,
possibly(rcm_prefill_research_tracker,otherwise = NA))
getwd()
list.files()
devtools::install(build_vignettes = TRUE)
browseVignettes("researchcyclematrix")
# run the function on each country / each part of the rcm and create
safe_rcm_prefill_research_tracker <- possibly(rcm_prefill_research_tracker,otherwise = "couldn't write xlsx file.")
devtools::install(build_vignettes = TRUE)
browseVignettes("researchcyclematrix")
devtools::install(build_vignettes = TRUE)
browseVignettes("researchcyclematrix")
library(researchcyclematrix)
rcm<-rcm_download(include_validated = TRUE)
devtools::install()
devtools::install()
researchcyclematrix:::rcm_plot_validation_duration(rcm)
rm(rcm_set_validation_date)
rcm(rcm_find_file.id)
rm(rcm_find_file.id)
rm(rcm_find_row_by_file.id)
library(rcm)
library(researchcyclematrix)
rcm_prefill_research_tracker(by_country = T)
todo<-todo_download()
rcm_find_row_by_file.id('LBY1702 JMMI 05-19')
rcm_find_row_by_file.id(rcm, 'LBY1702 JMMI 05-19')
rcm_find_row_by_file.id(rcm, 'LBY1702 JMMI 05-19') %>% t
rcm_find_row_by_file.id(rcm, 'LBY1702 JMMI 06-19') %>% t
rcm_prefill_research_tracker(rcm = rcm)
browseURL("tracker_2019-08-13.xlsx")
rcm_prefill_research_tracker(rcm = rcm, by_country = TRUE)
warnings()
?xlsx::addDataFrame
devtools::instalL()
devtools::load_all()
browseURL("tracker_2019-08-13.xlsx")
rcm_prefill_research_tracker(rcm = rcm, by_country = F)
devtools::install()
rcm_prefill_research_tracker(rcm = rcm, by_country = F)
browseURL("tracker_2019-08-13.xlsx")
devtools::install(dependencies = FALSE)
rcm_prefill_research_tracker(rcm = rcm, by_country = F)
browseURL("tracker_2019-08-13.xlsx")
devtools::install(dependencies = FALSE)
devtools::install(dependencies = FALSE)
rcm_prefill_research_tracker(rcm = rcm, by_country = F)
browseURL("tracker_2019-08-13.xlsx")
tracker <- list.files(base::system.file(package = "researchcyclematrix"),full.names = T) %>%
grep("Research tracker - template - V4.xlsx", ., value = TRUE) %>% browseURL()
rcm$country<-substr(rcm$rcid, 1, 3)
rcm_by_country<- split.data.frame(rcm,rcm$country)
output_xlsx_file_name<-gsub("\\.xlsx$","",output_xlsx_file_name)
output_xlsx_file_name <- paste0(output_xlsx_file_name,"_",names(rcm_by_country),".xlsx")
# use the "purrr" package to do something many times (purrr::map) and make sure it doesn't stop if an iteration fails (purrr::possibly):
# run the function on each country / each part of the rcm and create tracker files
safe_rcm_prefill_research_tracker <- purrr::possibly(rcm_prefill_research_tracker,otherwise = "couldn't write xlsx file.")
tracker_rows<-rcm_prefill_research_tracker_create_rows(rcm)
tracker_rows<-researchcyclematrix:::rcm_prefill_research_tracker_create_rows(rcm)
tracker_rows$`Date to HQ`
issues <- rcm %>% rcm_check
issues <-issues %>%
filter(grepl("planned submission passed but not received|none of the hq submission dates", issue))
issues$request<-issues$issue %>% as.character()
issues$request[grepl("none of the hq submission dates", issues$issue)]<-"Estimated date of submission to HQ missing, please add in \"Date to HQ\" column"
issues$request[grepl("planned submission passed but no received date", issues$issue)]<-"Estimated date of submission to HQ has passed, please add new estimated date in “Date to HQ” column and briefly explain delay in CFP comments"
rcm$`HQ Update Request`<- issues[match(rcm$file.id,issues$`file id`),"request"]
rcm$`HQ Update Request`<-as.character(rcm$`HQ Update Request`)
rcm$`Country`<-substr(rcm$rcid,1,3)
rcm$`HQ Update Request`[is.na(rcm$`HQ Update Request`)]<- ""
rcm$`Research cycle title`<-""
rcm$`Project Code`<- ""
rcm$`CFP comment`<-""
rcm$`Date to HQ` <- rcm$date.hqsubmission.actual
rcm$`Date to HQ`[is.na(rcm$`Date to HQ`)]<-rcm$date.hqsubmission.planned.latest[is.na(rcm$`Date to HQ`)]
rcm$`Date to HQ`[is.na(rcm$`Date to HQ`)]<-rcm$date.hqsubmission.planned.first[is.na(rcm$`Date to HQ`)]
format(rcm$`Date to HQ`)
format.Date(rcm$`Date to HQ`,'dd-M-Y')
format.Date(rcm$`Date to HQ`,format = 'dd-M-Y')
lubridate::month(rcm$`Date to HQ`)
?Date.format
?format.Date
as.Date(rcm$`Date to HQ`,'YYYY-m-d')
as.Date(rcm$`Date to HQ`,'YYYY-YYYY')
as.Date(rcm$`Date to HQ`,'%YYYY-%YYYY')
as.Date(rcm$`Date to HQ`,'%Y-%Y')
format(rcm$`Date to HQ`,'%Y')
format(rcm$`Date to HQ`,'%m-%Y')
format(rcm$`Date to HQ`,'%M-%Y')
format(rcm$`Date to HQ`,'%d-%b-%Y')
format(rcm$`Date to HQ`,'%d-%b-%Y') %>% class
devtools::install()
library(researchcyclematrix)
rcm_prefill_research_tracker(rcm)
rcm_prefill_research_tracker(rcm=rcm)
rcm_prefill_research_tracker(rcm=rcm)
browseURL("tracker_2019-08-13.xlsx")
rcm_prefill_research_tracker(rcm=rcm)
rcm_prefill_research_tracker(rcm=rcm,by_country = T)
dir.create('../../validation/monthly_tracker')
dir.create('../../validation/monthly_tracker/by_country')
rcm_prefill_research_tracker(paste0("../../validation/monthly_tracker/by_country/tracker_",Sys.Date(),  ".xlsx"),rcm=rcm,by_country = T)
rcm_prefill_research_tracker(paste0("../../validation/monthly_tracker/tracker_",Sys.Date(),  ".xlsx"),rcm=rcm,by_country = F)
browseURL("../../validation/monthly_tracker/")
rcm<-rcm_download()
rcm_prefill_research_tracker(paste0("../../validation/monthly_tracker/by_country/tracker_",Sys.Date(),  ".xlsx"),rcm=rcm,by_country = T)
warnings()
rcm_prefill_research_tracker(paste0("../../validation/monthly_tracker/tracker_",Sys.Date(),  ".xlsx"),rcm=rcm,by_country = F)
library(zip)
usethis::use_package('zip')
paste(target_path,"/","trackers_",Sys.Date(),'.zip')
target_path<-"../../validation/"
zip::zip(zipfile = paste(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(target_path,recursive = TRUE))
rcm_prefill_research_tracker_zip<-function(target_path,rcm){
rcm_prefill_research_tracker(output_xlsx_file_name = paste0(target_path,"/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
dir.create(paste0(target_path,"/","by_country"),showWarnings = FALSE)
rcm_prefill_research_tracker(output_xlsx_file_name = paste0(target_path,"/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(target_path,recursive = TRUE,full.names = TRUE))
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip<-function(target_path,rcm){
rcm_prefill_research_tracker(output_xlsx_file_name = paste0(target_path,"/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
dir.create(paste0(target_path,"/","by_country"),showWarnings = FALSE)
rcm_prefill_research_tracker(output_xlsx_file_name = paste0(target_path,"/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(target_path,recursive = TRUE,full.names = TRUE))
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
dir.create(paste0(target_path,"/","by_country"),showWarnings = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(target_path,recursive = TRUE,full.names = TRUE))
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip()
rcm_prefill_research_tracker_zip('../../../Desktop/')
target_path
rcm_prefill_research_tracker_zip('../../../Desktop/RESEARCH_TRACKERS/')
dir.create(target_path,showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(target_path,showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
dir.create(paste0(target_path,"/","by_country"),showWarnings = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(target_path,recursive = TRUE,full.names = TRUE))
browseURL(target_path)
return(invisible(NULL))
}
dir.create(target_path,showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker_zip('../../../Desktop/RESEARCH_TRACKERS/',rcm=rcm)
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(target_path,showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
dir.create(paste0(target_path,"/","by_country"),showWarnings = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste(target_path,"/../","trackers_",Sys.Date(),'.zip'),
files = list.files(target_path,recursive = TRUE,full.names = TRUE))
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip('../../../Desktop/RESEARCH_TRACKERS/',rcm=rcm)
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(target_path,showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
dir.create(paste0(target_path,"/xlsx/","by_country"),showWarnings = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste(target_path,"/../","trackers_",Sys.Date(),'.zip'),
files = list.files(target_path,recursive = TRUE,full.names = TRUE))
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste(target_path,"/../","trackers_",Sys.Date(),'.zip'),
files = list.files(target_path,recursive = TRUE,full.names = TRUE))
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip(target_path = '../../')
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(paste(target_path,"/xlsx/"),recursive = TRUE,full.names = TRUE))
zip::zip(zipfile = paste0(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(paste9(target_path,"/xlsx/"),recursive = TRUE,full.names = TRUE))
zip::zip(zipfile = paste0(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(paste0(target_path,"/xlsx/"),recursive = TRUE,full.names = TRUE))
browseURL(target_path)
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
zip::zip(zipfile = paste0(target_path,"/","trackers_",Sys.Date(),'.zip'),
files = list.files(paste0(target_path,"/xlsx/"),recursive = TRUE,full.names = TRUE))
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip("../")
rcm_prefill_research_tracker_zip("./")
rcm_prefill_research_tracker_zip("")
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
wd<-getwd()
setwd(target_path)
zip::zip(zipfile = paste0("trackers_",Sys.Date(),'.zip'),
files = list.files(paste0(target_path,"/xlsx/"),recursive = TRUE,full.names = TRUE))
setwd(wd)
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
wd<-getwd()
setwd(target_path)
zip::zip(zipfile = paste0("trackers_",Sys.Date(),'.zip'),
files = list.files(paste0(target_path,"/xlsx/"),recursive = TRUE,full.names = TRUE))
setwd(wd)
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip("../../DAO tests/")
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
wd<-getwd()
setwd(target_path)
zip::zip(zipfile = paste0("trackers_",Sys.Date(),'.zip'),
files = list.files(paste0("/xlsx/"),recursive = TRUE,full.names = TRUE))
setwd(wd)
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip("../../DAO tests/")
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
wd<-getwd()
setwd(target_path)
zip::zip(zipfile = paste0("trackers_",Sys.Date(),'.zip'),
files = list.files(paste0("./xlsx/"),recursive = TRUE,full.names = TRUE))
setwd(wd)
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
wd<-getwd()
setwd(target_path)
zip::zip(zipfile = paste0("trackers_",Sys.Date(),'.zip'),
files = list.files(paste0("./xlsx/"),recursive = TRUE,full.names = TRUE))
setwd(wd)
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip("../../DAO tests/",rcm=rcm)
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
wd<-getwd()
setwd(target_path)
zip::zip(zipfile = paste0("trackers_",Sys.Date(),'.zip'),
files = list.files(paste0("xlsx/"),recursive = TRUE,full.names = TRUE))
setwd(wd)
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip("../../DAO tests/",rcm=rcm)
rcm_prefill_research_tracker_zip<-function(target_path,rcm = NULL){
dir.create(paste0(target_path,"/xlsx/by_country"),showWarnings = FALSE,recursive = TRUE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/",'research_tracker',Sys.Date(),".xlsx"),by_country = FALSE)
rcm_prefill_research_tracker(rcm = rcm, output_xlsx_file_name = paste0(target_path,"/xlsx/by_country/",'research_tracker',Sys.Date(),".xlsx"),by_country = TRUE)
# wd<-getwd()
# setwd(target_path)
# zip::zip(zipfile = paste0("trackers_",Sys.Date(),'.zip'),
# files = list.files(paste0("xlsx/"),recursive = TRUE,full.names = TRUE))
# setwd(wd)
browseURL(target_path)
return(invisible(NULL))
}
rcm_prefill_research_tracker_zip("../../DAO tests/")
devtools::load_all("C:/Users/Martin Barner/work/rpackages/researchcyclematrix")
rcm_find_row_by_file.id("BGD1905")
rcm_find_row_by_file.id(rcm,"BGD1905")
hq_focal_point(unique(RCID))
library(researchcyclematrix)
dir.create("../../validation/monthly_tracker/",showWarnings = FALSE)
unlink(list.files("../../validation/monthly_tracker/",recursive = T,full.names = T),recursive = T)
researchcyclematrix:::rcm_prefill_research_tracker_zip('../../research_tracker')
researchcyclematrix:::rcm_prefill_research_tracker_zip("../../validation/monthly_tracker/")
browseURL("../../validation/monthly_tracker//xlsx/by_country/research_tracker2019-08-14_YEM.xlsx")
dir.create("../../validation/monthly_tracker/",showWarnings = FALSE)
unlink(list.files("../../validation/monthly_tracker/",recursive = T,full.names = T),recursive = T)
researchcyclematrix:::rcm_prefill_research_tracker_zip("../../validation/monthly_tracker/")
dir.create("../../validation/monthly_tracker/",showWarnings = FALSE)
unlink(list.files("../../validation/monthly_tracker/",recursive = T,full.names = T),recursive = T)
researchcyclematrix:::rcm_prefill_research_tracker_zip("../../validation/monthly_tracker/")
devtools::install(dependencies = FALSE)
list.files("../../validation/monthly_tracker/",recursive = T,full.names = T,include.dirs = TRUE)
unlink(list.files("../../validation/monthly_tracker/",recursive = T,full.names = T,include.dirs = TRUE),recursive = T)
researchcyclematrix:::rcm_prefill_research_tracker_zip("../../validation/monthly_tracker/")
devtols::install()
devtools::install(dependencies = FALSE)
devtools::install(dependencies = FALSE)
